[project]
name = "agentictrust"
version = "0.4.0"
description = "AgenticTrust - Production-ready backend service for MCP management and monitoring"
authors = [{name = "AgenticTrust Team"}]
readme = "README.md"
requires-python = ">=3.10"

dependencies = [
    "fastapi>=0.115.12",
    "uvicorn[standard]>=0.34.2",
    "pydantic>=2.11.5",
    "pydantic-settings>=2.9.1",
    "sqlalchemy>=2.0.41",
    "alembic>=1.16.1",
    "aiosqlite>=0.21.0",
    "asyncpg>=0.30.0",
    "requests>=2.32.3",
    "httpx>=0.28.1",
    "greenlet>=3.2.2",
    "httpx-sse>=0.4.0",
    "sse-starlette>=2.3.5",
    "fastmcp>=2.8.1",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.3.5",
    "pytest-asyncio>=0.26.0",
    "pytest-cov>=6.1.1",
    "black>=25.1.0",
    "isort>=6.0.1",
    "flake8>=7.2.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["backend"]

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.pytest.ini_options]
testpaths = ["backend/tests"]
python_files = ["test_*.py"]
python_functions = ["test_*"]
addopts = "-v --tb=short"

[tool.coverage.run]
source = ["backend"]
omit = ["*/tests/*", "*/migrations/*"] 